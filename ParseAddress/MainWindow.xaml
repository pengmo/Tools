<Window x:Class="ParseAddress.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ParseAddress"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        mc:Ignorable="d"
        Title="地址分析 V1.6" Height="600" Width="800" Loaded="Window_Loaded" Icon="Check_Title.png" 
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <!--第一部分-->
        <!--按钮样式-->
        <Style x:Key="InputGroupButtonLeftStyle" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#fff"></GradientStop>
                        <GradientStop Offset="1" Color="#E0E0E0"></GradientStop>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="40"/>
            <Setter Property="BorderBrush" Value="#ccc"/>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="0,4,4,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="dse" BlurRadius="8" ShadowDepth="0" Color="#9966afe9" Opacity="0"/>
                                </Border.Effect>
                                <!--点击时显示-->
                                <Grid x:Name="PressedLayer" Visibility="Collapsed">
                                    <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                        <Rectangle.Effect>
                                            <BlurEffect Radius="5"></BlurEffect>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                    <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                        <Border.Effect>
                                            <BlurEffect Radius="3"></BlurEffect>
                                        </Border.Effect>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <!--禁用时显示-->
                            <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e6e6e6"/>
                                <Setter Property="BorderBrush" Value="#adadad"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#66afe9"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--输入组样式-->
        <Style x:Key="input-group-btn" TargetType="{x:Type Control}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="BorderBrush" Value="#ccc"/>
            <Setter Property="Foreground" Value="#555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Content="{TemplateBinding Tag}" Style="{DynamicResource InputGroupButtonLeftStyle}" Margin="-1,0,0,0"></Button>
                            <Border Grid.Column="0" x:Name="border" CornerRadius="4,0,0,4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Border.Effect>
                                    <DropShadowEffect x:Name="dse" BlurRadius="8" ShadowDepth="0" Color="#9966afe9" Opacity="0"/>
                                </Border.Effect>
                                <Rectangle Height="1" VerticalAlignment="Top" Stroke="#000000" Opacity="0.1">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="1"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                            </Border>
                            <!--内容放在外面 因为阴影会对内容产生影响 Margin绑定BorderThickness是为了让padding没有误差-->
                            <ScrollViewer Grid.Column="0" x:Name="PART_ContentHost" Margin="0" Padding="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#66afe9"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#eee"/>
                    <Setter Property="Cursor" Value="No"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--按钮里的路径-->
        <Style x:Key="InputGroupPathStyle" BasedOn="{x:Null}" TargetType="{x:Type Path}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Fill" Value="#777"/>
            <Setter Property="Stretch" Value="Fill"/>
        </Style>
        <PathGeometry x:Key="PathDataSearch">M12.003748,4.5049986C10.494726,4.5309996 8.9806971,4.987008 7.7016882,5.9000024 4.5866403,8.1250076 4.0476317,12.220008 6.5006675,15.049994 8.9517054,17.875006 13.465759,18.364996 16.581798,16.140005 19.698844,13.915 20.235855,9.8199996 17.783826,6.9899983 16.404809,5.3980035 14.373776,4.5479979 12.305754,4.5049986 12.205747,4.5029997 12.104748,4.5029997 12.003748,4.5049986z M12.127743,2.0721107E-06C15.724792,-0.0019966637 19.286836,1.4420032 21.684881,4.2050108 25.103918,8.1500015 25.075918,13.549994 22.002878,17.435003L31.444,28.325001 26.299932,32.000002 16.892806,21.15C11.969737,23.054996 6.0676631,21.830006 2.5996136,17.834997 -1.5464387,13.049994 -0.63543081,6.1250085 4.6346449,2.3600098 6.8586745,0.77200525 9.5027079,0.0010016877 12.127743,2.0721107E-06z</PathGeometry>

        <!--第二部分-->
        <!--DataGrid默认样式-->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="BorderBrush" Value="#ddd"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowHeight" Value="38"/>
            <Setter Property="ColumnHeaderHeight" Value="38"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#ddd"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="AlternatingRowBackground" Value="#f9f9f9"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--Header栏可拖拽移动-->
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Header默认样式-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#ddd"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--<Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </Trigger>-->
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#f5f5f5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--选中一行样式-->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter Margin="5,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#f1f1f1"/>
                    <Setter Property="Foreground" Value="#333"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Foreground" Value="#000"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#fcf8e3"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="#eee"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridTextCenter" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!--第三部分-->
        <!--任务按钮样式-->
        <Style x:Key="BtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#428bca"/>
            <Setter Property="BorderBrush" Value="#357ebd"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                <!--点击时显示-->
                                <Grid x:Name="PressedLayer" Visibility="Collapsed">
                                    <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                        <Rectangle.Effect>
                                            <BlurEffect Radius="5"></BlurEffect>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                    <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                        <Border.Effect>
                                            <BlurEffect Radius="3"></BlurEffect>
                                        </Border.Effect>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <!--禁用时显示-->
                            <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--第四部分-->
        <!--Tooltip样式-->
        <Style TargetType="Label" x:Key="BottomBubblePanel">
            <Setter Property="Tag" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Grid>
                            <Border CornerRadius="4" BorderBrush="Black" BorderThickness="1" VerticalAlignment="Bottom" Margin="0,0,0,8.5" Background="#FFFFFF" HorizontalAlignment="Left" Padding="5">
                                <ContentPresenter />
                            </Border>
                            <Canvas Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,0" Background="Transparent">
                                <Path Stroke="Black" StrokeThickness="0.5" Fill="#FFFFFF">
                                    <Path.Data>
                                        <PathGeometry Figures="M 0,0
                                             L 0,0,5,10
                                             L 5,10,10,0
                                             "/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Popup样式-->
        <Style TargetType="Popup" x:Key="PopupStyle">
            <Setter Property="IsOpen" Value="False"/>
            <Setter Property="Placement" Value="Top"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="VerticalOffset" Value="2"/>
            <Setter Property="HorizontalOffset" Value="90"/>
            <Setter Property="PopupAnimation" Value="Fade"/>
            <Setter Property="AllowsTransparency" Value="True"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="44"/>
            <RowDefinition/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <TextBox Name="InputGroupButton" Text="请输入处理地址" Margin="5" Style="{DynamicResource input-group-btn}" Button.Click="InputGroupButton_Click" GotFocus="InputGroupButton_GotFocus" LostFocus="InputGroupButton_LostFocus" KeyDown="InputGroupButton_KeyDown">
                <TextBox.Tag>
                    <Path Style="{DynamicResource InputGroupPathStyle}" Data="{DynamicResource PathDataSearch}"></Path>
                </TextBox.Tag>
            </TextBox>
        </Grid>

        <Grid Grid.Row="1">
            <Border Margin="5" BorderThickness="2" BorderBrush="#ddd">
                <DataGrid Name="DG" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Index}" Header="序号" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding Address}" Header="地址" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding Province}" Header="省" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding City}" Header="市" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding District}" Header="区" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding AreaCode}" Header="区号" ElementStyle="{StaticResource DataGridTextCenter}"/>
                        <DataGridTextColumn Binding="{Binding Tel}" Header="电话" ElementStyle="{StaticResource DataGridTextCenter}"/>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="复制一行" Click="CopyLine_Click"/>
                            <MenuItem Header="删除一行" Click="DeleteLine_Click"/>
                            <MenuItem Header="清空" Click="ClearLines_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </Border>
        </Grid>

        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal">
                <Label FontSize="14" Margin="5,0,0,0" FontWeight="Bold">
                    <Label.Content>
                        <TextBlock Text="{Binding DataCount, StringFormat=总行数: {0}}" />
                    </Label.Content>
                </Label>
                <Label FontSize="14" Margin="5,0,0,0" FontWeight="Bold">
                    <Label.Content>
                        <TextBlock Text="{Binding ValidCount, StringFormat=有效总数: {0}}" />
                    </Label.Content>
                </Label>
                <Label FontSize="14" Margin="5,0,0,0" FontWeight="Bold">
                    <Label.Content>
                        <TextBlock Text="{Binding InvalidCount, StringFormat=无效总数: {0}}" />
                    </Label.Content>
                </Label>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="BtnImportFile" Margin="0,0,20,5" Content="导入" Style="{DynamicResource BtnStyle}" Click="BtnImportFile_Click"/>
                <Button Name="BtnParseFile" Margin="0,0,20,5" Content="分析" Style="{DynamicResource BtnStyle}" Click="BtnParseFile_Click"/>
                <Button Name="BtnExportFile" Margin="0,0,5,5" Content="导出" Style="{DynamicResource BtnStyle}" Click="BtnExportFile_Click"/>
            </StackPanel>
        </Grid>
        <!--用户名为空提示信息-->
        <Popup Name="NetworkProPop" Style="{StaticResource PopupStyle}" PlacementTarget="{Binding ElementName = InputGroupButton}">
            <Label Style="{StaticResource BottomBubblePanel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Name="HintInfo"/>
                    </StackPanel>
                </StackPanel>
            </Label>
        </Popup>
    </Grid>
</Window>
